tab <- table(df, df)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("data1","data2"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
tab <- table(df, df)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("data1","data2"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
print(df)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
pnorm(2)
print("Probabiliy that an arbitrary outcome is larger than -0.5:")
pnorm(-0.5, lower.tail = FALSE)
print("Probabiliy that an arbitrary outcome is between -1 and 2:")
pnorm(2) - pnorm(-1)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("n=100","n=1000000"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
print(df)
p1 = sum(sample_b[sample_b < 2])/sum(sample_b)
p1 = sum(sample_b[sample_b < 2])/sum(sample_b)
print(p1)
p1 = sum(sample_b < 2) / length(sample_b)
print(p1)
p1 = sum(sample_b < 2) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p1)
p2 = sum(sample_b > -0.5) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p2)
p1 = sum(sample_b > -1 & sample_b < 2) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p1)
p1 = sum(sample_b < 2) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p1)
p2 = sum(sample_b > -0.5) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p2)
p3 = sum(sample_b > -1 & sample_b < 2) / length(sample_b)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
print(p3)
# Generate samples
sample_a = rnorm(100, 3, 2)
sample_b = rnorm(10000003, 2)
# Plots
par(pin=c(2,1.25))
par(mfrow=c(2,2))
hist(sample_a)
hist(sample_b)
qqnorm(sample_a)
qqnorm(sample_b)
# Generate samples
sample_a = rnorm(100, 3, 2)
sample_b = rnorm(1000000, 3, 2)
# Plots
par(pin=c(2,1.25))
par(mfrow=c(2,2))
hist(sample_a)
hist(sample_b)
qqnorm(sample_a)
qqnorm(sample_b)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("n=100","n=1000000"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
print(df)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
pnorm(2)
print("Probabiliy that an arbitrary outcome is larger than -0.5:")
pnorm(-0.5, lower.tail = FALSE)
print("Probabiliy that an arbitrary outcome is between -1 and 2:")
pnorm(2) - pnorm(-1)
mean = 3
sd = 2
# Generate samples
sample_a = rnorm(100, mean, sd)
sample_b = rnorm(1000000, mean, sd)
# Plots
par(pin=c(2,1.25))
par(mfrow=c(2,2))
hist(sample_a)
hist(sample_b)
qqnorm(sample_a)
qqnorm(sample_b)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("n=100","n=1000000"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
print(df)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
pnorm(2, mean, sd)
print("Probabiliy that an arbitrary outcome is larger than -0.5:")
pnorm(-0.5, mean, sd, lower.tail = FALSE)
print("Probabiliy that an arbitrary outcome is between -1 and 2:")
pnorm(2, mean, sd) - pnorm(-1, mean, sd)
qnorm(0.95, mean, sd)
mu = 3
sigma = 2
# Generate samples
sample_a = rnorm(100, mu, sigma)
sample_b = rnorm(1000000, mu, sigma)
# Plots
par(pin=c(2,1.25))
par(mfrow=c(2,2))
hist(sample_a)
hist(sample_b)
qqnorm(sample_a)
qqnorm(sample_b)
mean_a = mean(sample_a)
mean_b = mean(sample_b)
sd_a = sd(sample_a)
sd_b = sd(sample_b)
df <- data.frame(dataset=c("n=100","n=1000000"),mean=c(mean_a, mean_b),sd=c(sd_a, sd_b))
print(df)
print("Probabiliy that an arbitrary outcome is smaller than 2:")
pnorm(2, mu, sigma)
print("Probabiliy that an arbitrary outcome is larger than -0.5:")
pnorm(-0.5, mu, sigma, lower.tail = FALSE)
print("Probabiliy that an arbitrary outcome is between -1 and 2:")
pnorm(2, mu, sigma) - pnorm(-1, mu, sigma)
mu = -10
sigma = 5
sample = pnorm(1000000)
sample_xform = mu + sample * sigma
print("Sample mean: %f", mean(sample_xform))
mu = -10
sigma = 5
sample = pnorm(1000000)
sample_xform = mu + sample * sigma
sprintf("Sample mean: %f", mean(sample_xform))
sprintf("Sample sd: %f", sd(sample_xform))
mu = -10
sigma = 5
sample = rnorm(1000000)
sample_xform = mu + sample * sigma
sprintf("Sample mean: %f", mean(sample_xform))
sprintf("Sample sd: %f", sd(sample_xform))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqplot(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqlnorm(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqlnorm(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
LognormalQQ(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
lnqq(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqln(sample_a)
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqplot(qnorm(ppoints(length(sample_a))), sample_a)
par(pin=c(4,2))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
par(pin=c(3,2))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqplot(qnorm(ppoints(length(sample_a))), sample_a)
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a)
qqplot(qnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqbinom(sample_b)
?ppoints
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqbinom(qbinom(ppoints(length(sample_b))), sample_b, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a))), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b))), sample_b, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
?runif
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
sample_c = runif(60, min=-2, max=3)
hist(sample_x)
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(qunif(ppoints(length(sample_b)), -2, 3), sample_c, main="QQ plot")
?qqplot
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot", xlab = "aaa")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(qunif(ppoints(length(sample_b)), -2, 3), sample_c, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot", xlabel = "aaa")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(qunif(ppoints(length(sample_b)), -2, 3), sample_c, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(qlnorm(ppoints(length(sample_a)), 2, 2), sample_a, main="QQ plot", xlab = "aaa")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(qbinom(ppoints(length(sample_b)), 50, 0.25), sample_b, main="QQ plot")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(qunif(ppoints(length(sample_b)), -2, 3), sample_c, main="QQ plot")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylabel="Sample quantiles")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(sample_b, qbinom(ppoints(length(sample_b)), 50, 0.25), main="QQ plot", ylabel="Sample quantiles")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(sample_c, qunif(ppoints(length(sample_b)), -2, 3), main="QQ plot", ylabel="Sample quantiles")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylab="Sample quantiles")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(sample_b, qbinom(ppoints(length(sample_b)), 50, 0.25), main="QQ plot", ylab="Sample quantiles")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c)
qqplot(sample_c, qunif(ppoints(length(sample_b)), -2, 3), main="QQ plot", ylab="Sample quantiles")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylab="Sample quantiles")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(sample_b, qbinom(ppoints(length(sample_b)), 50, 0.25), main="QQ plot", ylab="Sample quantiles")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c, main="Box plot")
qqplot(sample_c, qunif(ppoints(length(sample_b)), -2, 3), main="QQ plot", ylab="Sample quantiles")
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylab="Sample quantiles")
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(sample_b, qbinom(ppoints(length(sample_b)), 50, 0.25), main="QQ plot", ylab="Sample quantiles")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c, main="Box plot")
qqplot(sample_c, qunif(ppoints(length(sample_c)), -2, 3), main="QQ plot", ylab="Sample quantiles")
sample_d = rpois(200, 9)
hist(sample_d)
boxplot(sample_d, main="Box plot")
qqplot(sample_d, qpois(ppoints(length(sample_d)), 9), main="QQ plot", ylab="Sample quantiles")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylab="Sample quantiles", log='xy')
par(pin=c(1,1))
par(mfrow=c(1,3))
sample_a = rlnorm(10000, meanlog=2, sdlog=2)
hist(sample_a)
boxplot(sample_a, main="Box plot")
qqplot(sample_a, qlnorm(ppoints(length(sample_a)), 2, 2), main="QQ plot", ylab="Sample quantiles", log='xy')
sample_b = rbinom(40, size = 50, prob = 0.25)
hist(sample_b)
boxplot(sample_b, main="Box plot")
qqplot(sample_b, qbinom(ppoints(length(sample_b)), 50, 0.25), main="QQ plot", ylab="Sample quantiles")
sample_c = runif(60, min=-2, max=3)
hist(sample_c)
boxplot(sample_c, main="Box plot")
qqplot(sample_c, qunif(ppoints(length(sample_c)), -2, 3), main="QQ plot", ylab="Sample quantiles")
sample_d = rpois(200, 9)
hist(sample_d)
boxplot(sample_d, main="Box plot")
qqplot(sample_d, qpois(ppoints(length(sample_d)), 9), main="QQ plot", ylab="Sample quantiles")
?read.table
read.table("mortality.txt", header=TRUE)
data = read.table("mortality.txt", header=TRUE)
data = read.table("mortality.txt", header=TRUE)
data
summary(data)
print(summary(data))
data_teen = data$teen
print(summary(data_teen))
data_teen = data$teen
print("hting", summary(data_teen))
data_teen = data$teen
print(paste("hting", summary(data_teen)))
data_teen = data$teen
print("Age summary:")
print(summary(data_teen))
data_teen = data$teen
print("Age summary:")
print(summary(data_teen))
data_mort = data$mort
print("Age summary:")
print(summary(data_mort))
data_teen = data$teen
print("Age summary:")
print(summary(data_teen))
data_mort = data$mort
print("Mortality summary:")
print(summary(data_mort))
data_birth = data$teen
print("Birth rate summary:")
print(summary(data_birth))
data_mort = data$mort
print("Mortality rate summary:")
print(summary(data_mort))
data_birth = data$teen
print("Birth rate summary:")
print(summary(data_birth))
hist(data_birth)
boxplot(data_birth)
qqnorm(data_birth)
data_mort = data$mort
print("Mortality rate summary:")
print(summary(data_mort))
hist(data_mort)
boxplot(data_mort)
qqnorm(data_mort)
par(pin=c(1,1))
par(mfrow=c(1,3))
data_birth = data$teen
print("Birth rate summary:")
print(summary(data_birth))
hist(data_birth)
boxplot(data_birth)
qqnorm(data_birth)
data_mort = data$mort
print("Mortality rate summary:")
print(summary(data_mort))
hist(data_mort)
boxplot(data_mort)
qqnorm(data_mort)
plot(data_birth, data_mort)
mu=nu=180
?t.test
B = 1000
m = n = 30
mu = nu = 180
sd = 10
p_vals = numeric(B)
for(b in 1:B){
x = rnorm(n, mu, sd)
y = rnorm(n, nu, sd)
p_vals[b] = t.test(x, y, var.equal = TRUE)
}
fract_a = sum(p_vals[p_vals < 0.05]) / length(p_vals)
B = 1000
m = n = 30
mu = nu = 180
sd = 10
p_vals = numeric(B)
for(b in 1:B){
x = rnorm(n, mu, sd)
y = rnorm(n, nu, sd)
p_vals[b] = t.test(x, y, var.equal = TRUE)
}
#fract_a = sum(p_vals[p_vals < 0.05]) / length(p_vals)
#fract_b = sum(p_vals[p_vals < 0.1]) / length(p_vals)
#print(paste("Fraction of p-values smaller than 5%", fract_a))
#print(paste("Fraction of p-values smaller than 10%", fract_b))
B = 1000
m = n = 30
mu = nu = 180
sd = 10
p_vals = numeric(B)
for(b in 1:B){
x = rnorm(n, mu, sd)
y = rnorm(n, nu, sd)
p_vals[b] = t.test(x, y, var.equal = TRUE)[[3]]
}
fract_a = sum(p_vals[p_vals < 0.05]) / length(p_vals)
fract_b = sum(p_vals[p_vals < 0.1]) / length(p_vals)
print(paste("Fraction of p-values smaller than 5%", fract_a))
print(paste("Fraction of p-values smaller than 10%", fract_b))
